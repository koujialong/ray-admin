generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade, map: "Account_userId_relation")

  @@unique([provider, providerAccountId])
  @@index([userId], map: "Account_userId_fkey")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade, map: "Session_userId_relation")

  @@index([userId], map: "Session_userId_fkey")
}

model User {
  id            String    @id @default(cuid())
  username      String
  password      String
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          String
  editable      Boolean   @default(true)
  accounts      Account[]
  sessions      Session[]
}

model Menu {
  id       String  @default(cuid())
  label    String
  key      String  @id @unique
  icon     String
  parent   String?
  order    Int
  menuType String
  status   String  @db.Char(1)
  editable Boolean @default(true)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Role {
  id       String  @id @default(cuid())
  remark   String?
  roleName String
  roleKey  String  @unique(map: "Rule_roleKey_key")
  order    Int
  status   String  @db.Char(1)
  editable Boolean @default(true)
}

model UserRole {
  id     String @id @default(cuid())
  userId String
  roleId String
}

model RoleMenu {
  id     String @id @default(cuid())
  roleId String
  menuId String
}
